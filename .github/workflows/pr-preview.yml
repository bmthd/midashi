name: PR Preview

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  pages: write
  actions: write

jobs:
  build-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install
        
      - name: Build library
        run: pnpm build
        
      - name: Install demo dependencies
        run: cd demo && pnpm install
        
      - name: Build demo with PR base path
        run: |
          cd demo
          # Update base path for PR preview
          sed -i "s|base: '/midashi/',|base: '/midashi/pr-${{ github.event.number }}/',|" vite.config.ts
          npx vite build
        
      - name: Deploy to GitHub Pages (PR)
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./demo/dist
          destination_dir: pr-${{ github.event.number }}
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          
      - name: Add PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://bmthd.github.io/midashi/pr-${prNumber}/`;
            
            // Find existing preview comment
            const comments = await github.rest.issues.listComments({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.body.includes('ðŸš€ **Preview deployed!**')
            );
            
            const body = `ðŸš€ **Preview deployed!**\n\nYou can preview this PR at: ${previewUrl}\n\n> This preview will be updated with each push to this PR.`;
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }